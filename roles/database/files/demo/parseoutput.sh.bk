#!/usr/bin/bash
###=======================================================================================###
#   Modified for Azure by:
#        Karl Vietmeier - Intel Cloud CSA
#
#   Gather output from benchmark runs and format it for graphing.
#   This is tied to the voltwrangler script - it uses the "params" file
#
#   Usage:
#     gatherstats.sh TestName outputfile.out
#
#     TestName = vCPUs/Instance
#     output_file = test results output
#
#   Not using voltwrangler - need to source the params elsewhere.
#   - Most of the info added isn't particularly useful on each line.
#
#
###=======================================================================================###

###---- Input vars
TNAME=$1
test_output=$2

###---- Set some variables
# Azure API endpoint to get VM instance type and OS SKU
AzureAPI="http://169.254.169.254/metadata/instance/compute?api-version=2021-02-01"

# Grab VM info from DB node
# ssh -i ~/.ssh/vdb-mgmt_priv ubuntu@vdb-02 (run command)
Instance=$(ssh ubuntu@vdb-02 -i ~/.ssh/vdb-mgmt_priv curl -s -H Metadata:true --noproxy "*" "$AzureAPI" | jq | grep -i vmsize | awk -F "\"" '{print $4}')
OS_SKU=$(ssh ubuntu@vdb-02 -i ~/.ssh/vdb-mgmt_priv curl -s -H Metadata:true --noproxy "*" "$AzureAPI" | jq | grep -m 1 -i sku | awk -F "\"" '{print $4}')
CPU_SKU=$(ssh ubuntu@vdb-03 -i ~/.ssh/vdb-mgmt_priv lscpu | egrep 'Model name' | awk '{print $6}')
CPU_ghz=$(ssh ubuntu@vdb-03 -i ~/.ssh/vdb-mgmt_priv lscpu | egrep 'Model name' | awk '{print $9}')

# Grab VM info - Hard code f needed
#Instance="Standard_E16bds_v5"
#OS_SKU="Ubuntu_20.04"
#CPU_SKU="8372C"
#CPU_ghz="2.8ghz"

# Cluster info -
# ToDo - grab this from somewhere else, for now, hard code it.
KFACTOR=1
CMDLOGGING="Yes"
DEMONAME="ChargingDemo"
SPH=3
NODECOUNT=4

# Create Metadata for each test run (extra column so you can remove the filler column)
echo "Demo Name,, $DEMONAME"
echo "Testname,, $TNAME"
echo "VM Instance,, $Instance"
echo "OS Version,, $OS_SKU"
echo "CPU SKU,, $CPU_SKU"
echo "Base Freq,, $CPU_ghz"
echo "Logging,, $CMDLOGGING"
echo "SPH,, $SPH"
echo "Node Count,, $NODECOUNT"
echo "Output File,, $test_output"
echo ""

# Create column headers
#echo -n "Testname,Instance,CPU_SKU,CPU_GHZ,OS_SKU,DemoName,Logging,SPH,NodeCount,SourceFile,Date_Time,Filler,Target_TPMS,Actual_TPMS,"
echo -n "Date_Time,Filler,Target_TPMS,Actual_TPMS,"

for i in RQU KV_GET KV_PUT ; do
  for j in AVG 50 99 99.9 99.99 99.999 MAX MAX_FREQ ; do
   echo -n ${i}_${j},
  done
done

echo ""

# Generate output file with metadata about test prepended
# Convert to csv - bit of a hack but it works. Relies on time being at a specific location
grep GREPABLE $test_output | sed '1,$s/./-/14' | sed '1,$s/./-/17' | sed 's/:/,/g'
#grep GREPABLE $test_output | sed '1,$s/^/'${TNAME},${Instance},${CPU_SKU},${CPU_ghz},${OS_SKU},${DEMONAME},${CMDLOGGING},${SPH},${NODECOUNT},${test_output},'/g' | sed '1,$s/./-/107' | sed '1,$s/./-/110' | sed 's/:/,/g'

# Testing - 
#grep GREPABLE $test_output | sed '1,$s/^/'${TNAME},${Instance},${CPU_SKU},${CPU_ghz},${OS_SKU},${DEMONAME},${CMDLOGGING},${SPH},${NODECOUNT},${test_output},'/g' | sed '1,$s/./-/105' | sed '1,$s/./-/108' | sed 's/:/,/g' | sed 's/-/:/105' | sed 's/-/:/108' > foo.txt
#grep GREPABLE $test_output | sed '1,$s/^/'${TNAME},${Instance},${CPU_SKU},${CPU_ghz},${OS_SKU},${DEMONAME},${CMDLOGGING},${SPH},${NODECOUNT},${test_output},'/g'







